<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.yanrc.xpring.dal.mapper.ConfigModifyHistoryMapper" >
  <resultMap id="BaseResultMap" type="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="config_properties_id" property="configPropertiesId" jdbcType="BIGINT" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="net.yanrc.xpring.dal.domain.ConfigModifyHistory" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, config_properties_id, operate_time, operator
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from config_modify_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from config_modify_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    insert into config_modify_history (id, config_properties_id, operate_time, 
      operator, content)
    values (#{id,jdbcType=BIGINT}, #{configPropertiesId,jdbcType=BIGINT}, #{operateTime,jdbcType=TIMESTAMP}, 
      #{operator,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    insert into config_modify_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="configPropertiesId != null" >
        config_properties_id,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="configPropertiesId != null" >
        #{configPropertiesId,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    update config_modify_history
    <set >
      <if test="configPropertiesId != null" >
        config_properties_id = #{configPropertiesId,jdbcType=BIGINT},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    update config_modify_history
    set config_properties_id = #{configPropertiesId,jdbcType=BIGINT},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.yanrc.xpring.dal.domain.ConfigModifyHistory" >
    update config_modify_history
    set config_properties_id = #{configPropertiesId,jdbcType=BIGINT},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>